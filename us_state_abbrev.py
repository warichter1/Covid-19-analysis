#!/usr/bin/env python3
# -*- coding: utf-8 -*-

# United States of America Python Dictionary to translate States,
# Districts & Territories to Two-Letter codes and vice versa.
#
# https://gist.github.com/rogerallen/1583593
#
# Dedicated to the public domain.  To the extent possible under law,
# Roger Allen has waived all copyright and related or neighboring
# rights to this code.
from collections import OrderedDict

us_state_abbrev = {
    'Alabama': 'AL',
    'Alaska': 'AK',
    'American Samoa': 'AS',
    'Arizona': 'AZ',
    'Arkansas': 'AR',
    'California': 'CA',
    'Colorado': 'CO',
    'Connecticut': 'CT',
    'Delaware': 'DE',
    'Diamond Princess': 'DP',
    'District of Columbia': 'DC',
    'Florida': 'FL',
    'Georgia': 'GA',
    'Grand Princess': 'GP',
    'Guam': 'GU',
    'Hawaii': 'HI',
    'Idaho': 'ID',
    'Illinois': 'IL',
    'Indiana': 'IN',
    'Iowa': 'IA',
    'Kansas': 'KS',
    'Kentucky': 'KY',
    'Louisiana': 'LA',
    'Maine': 'ME',
    'Maryland': 'MD',
    'Massachusetts': 'MA',
    'Michigan': 'MI',
    'Minnesota': 'MN',
    'Mississippi': 'MS',
    'Missouri': 'MO',
    'Montana': 'MT',
    'Nebraska': 'NE',
    'Nevada': 'NV',
    'New Hampshire': 'NH',
    'New Jersey': 'NJ',
    'New Mexico': 'NM',
    'New York': 'NY',
    'North Carolina': 'NC',
    'North Dakota': 'ND',
    'Northern Mariana Islands':'MP',
    'Ohio': 'OH',
    'Oklahoma': 'OK',
    'Oregon': 'OR',
    'Pennsylvania': 'PA',
    'Puerto Rico': 'PR',
    'Rhode Island': 'RI',
    'South Carolina': 'SC',
    'South Dakota': 'SD',
    'Tennessee': 'TN',
    'Texas': 'TX',
    'Utah': 'UT',
    'Vermont': 'VT',
    'Virgin Islands': 'VI',
    'Virginia': 'VA',
    'Washington': 'WA',
    'West Virginia': 'WV',
    'Wisconsin': 'WI',
    'Wyoming': 'WY'
}

eduAttainmentRank ={46: 'Alabama',
                     21: 'Alaska',
                     36: 'Arizona',
                     50: 'Arkansas',
                     22: 'California',
                     5: 'Colorado',
                     4: 'Connecticut',
                     18: 'Delaware',
                     1: 'District of Columbia',
                     37: 'Florida',
                     26: 'Georgia',
                     15: 'Hawaii',
                     39: 'Idaho',
                     13: 'Illinois',
                     42: 'Indiana',
                     30: 'Iowa',
                     16: 'Kansas',
                     47: 'Kentucky',
                     48: 'Louisiana',
                     20: 'Maine',
                     3: 'Maryland',
                     2: 'Massachusetts',
                     29: 'Michigan',
                     11: 'Minnesota',
                     49: 'Mississippi',
                     28: 'Missouri',
                     24: 'Montana',
                     23: 'Nebraska',
                     45: 'Nevada',
                     10: 'New Hampshire',
                     8: 'New Jersey',
                     33: 'New Mexico',
                     9: 'New York',
                     31: 'North Carolina',
                     34: 'North Dakota',
                     38: 'Ohio',
                     43: 'Oklahoma',
                     17: 'Oregon',
                     25: 'Pennsylvania',
                     52: 'Puerto Rico',
                     14: 'Rhode Island',
                     40: 'South Carolina',
                     35: 'South Dakota',
                     44: 'Tennessee',
                     41: 'Texas',
                     19: 'Utah',
                     6: 'Vermont',
                     7: 'Virginia',
                     12: 'Washington',
                     51: 'West Virginia',
                     27: 'Wisconsin',
                     32: 'Wyoming'}

# thank you to @kinghelix and @trevormarburger for this idea
abbrev_us_state = dict(map(reversed, us_state_abbrev.items()))

def stateIndex():
    indexUsState = {}
    for i, key in enumerate(us_state_abbrev.keys()):
        indexUsState[i + 100] = key
    StateUsIndex = dict(map(reversed, indexUsState.items()))
    return indexUsState, StateUsIndex
